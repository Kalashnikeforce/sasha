from aiogram import Router, F, Bot
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.filters import CommandStart
from config import TIKTOK_LINK, TELEGRAM_LINK, WEB_APP_URL
from database import add_user
import json
import aiosqlite
from aiogram.filters import Command
from config import DATABASE_PATH, CHANNEL_ID

router = Router()

def register_user_handlers(dp, bot):
    dp.include_router(router)

@router.message(CommandStart())
async def start_command(message: Message):
    user = message.from_user
    await add_user(user.id, user.username, user.first_name, user.last_name)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞
    command_args = message.text.split()
    if len(command_args) > 1 and command_args[1].startswith('tournament_'):
        try:
            tournament_id = command_args[1].split('_')[1]
        except IndexError:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Ç—É—Ä–Ω–∏—Ä–∞.")
            return
        try:
            tournament_id = int(tournament_id)
        except ValueError:
            await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ç—É—Ä–Ω–∏—Ä–∞.")
            return

        try:
            # Get tournament info and check registration status
            async with aiosqlite.connect(DATABASE_PATH) as db:
                cursor = await db.execute('SELECT title, registration_status FROM tournaments WHERE id = ?', (tournament_id,))
                tournament = await cursor.fetchone()

            if tournament:
                tournament_title = tournament[0]
                registration_status = tournament[1] if len(tournament) > 1 else 'open'

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                if registration_status == 'closed':
                    await message.answer(
                        f"‚ùå <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Ç—É—Ä–Ω–∏—Ä –∑–∞–∫—Ä—ã—Ç–∞!</b>\n\n"
                        f"üèÜ –¢—É—Ä–Ω–∏—Ä: {tournament_title}\n\n"
                        f"–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤—ã–º–∏ —Ç—É—Ä–Ω–∏—Ä–∞–º–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ!",
                        parse_mode='HTML'
                    )
                    return

                web_app_url = f"{WEB_APP_URL}?tournament={tournament_id}"
                web_app = WebAppInfo(url=web_app_url)
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üèÜ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç—É—Ä–Ω–∏—Ä–µ", web_app=web_app)],
                    [
                        InlineKeyboardButton(text="üì± TikTok", url=TIKTOK_LINK),
                        InlineKeyboardButton(text="üì¢ Telegram", url=TELEGRAM_LINK)
                    ]
                ])

                await message.answer(
                    f"üèÜ <b>–¢—É—Ä–Ω–∏—Ä: {tournament_title}</b>\n\n"
                    f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞!\n\n"
                    f"–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Ñ–æ—Ä–º—É!\n\n"
                    f"üìù –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å:\n"
                    f"‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç\n"
                    f"‚Ä¢ –ú–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
                    f"‚Ä¢ –ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º\n"
                    f"‚Ä¢ ID –≤ –∏–≥—Ä–µ",
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
                return
            else:
                await message.answer("‚ùå –¢—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")

        except Exception as e:
            print(f"Error processing tournament start: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç—É—Ä–Ω–∏—Ä–∞.")
            # Fallback to normal start

    # –û–±—ã—á–Ω—ã–π —Å—Ç–∞—Ä—Ç
    web_app = WebAppInfo(url=WEB_APP_URL)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÆ –û—Ç–∫—Ä—ã—Ç—å PUBG –†–æ–∑—ã–≥—Ä—ã—à–∏", web_app=web_app)],
        [
            InlineKeyboardButton(text="üì± TikTok", url=TIKTOK_LINK),
            InlineKeyboardButton(text="üì¢ Telegram", url=TELEGRAM_LINK)
        ]
    ])

    welcome_text = f"""
üéÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PUBG Mobile –†–æ–∑—ã–≥—Ä—ã—à–∏!</b>

–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã

üèÜ –£—á–∞—Å—Ç–≤—É–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö
üéØ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Ç—É—Ä–Ω–∏—Ä—ã
üíé –í—ã–∏–≥—Ä—ã–≤–∞–π –∫—Ä—É—Ç—ã–µ –ø—Ä–∏–∑—ã

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! üëá
    """

    await message.answer(welcome_text, reply_markup=keyboard, parse_mode='HTML')